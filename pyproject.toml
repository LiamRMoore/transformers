[tool.poetry]
name = "dev"
version = "0.1.0"
description = ""
authors = ["sarah.bryan <sarah.bryan@bjss.com>", "liam.moore <liam.moore@bjss.com>"]

[tool.poetry.dependencies]
python = "3.9.5"
boto3 = "^1.21.15"
python-dotenv = "^0.18.0"
pydantic = "^1.9.0"
xarray = "^0.18.0"
dask = "^2021.6.1"
distributed = "^2021.6.1"
opencv-python-headless = "4.5.3.56"
scikit-image = "0.18.1"
tensorflow = "2.7.0"
zarr = "^2.8"
python-json-logger = "2.0.2"
watchtower = "3.0.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
flake8 = "^4.0.1"
black = "^22.1.0"
pylint = "^2.12.2"
pytest-cov = "^3.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
line_length = 88
indent = '    '
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0

[tool.coverage.paths]
source = ["src/", "*/site-packages/"]

[tool.coverage.run]
omit = [".*", "*/site-packages/*"]

[tool.coverage.report]
fail_under = 10
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    'if __name__ == "__main__":']
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
[tool.pylint.format]
max-line-length = 88
[tool.pylint.basic]
variable-rgx = "[a-z_][a-z0-9_]{0,40}$"
[tool.pylint.global]
# ignoring missing module and missing class docstring errors
disable = ["C0114", "C0115", "W0621", "R0903", "R0913", "R0801", "W0212", "W1508", "W1203"]
output-format = "colorized"
fail-under = 8
extension-pkg-whitelist="cv2,pydantic"